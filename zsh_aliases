alias rspec='rspec --color'
alias gclone='ruby $HOME/.dotfiles/helper_scripts/gclone.rb'
alias daclone='sh $HOME/.dotfiles/helper_scripts/daclone.sh'
alias fuck='$(thefuck $(fc -ln -1))'
alias irssi="TERM=screen-256color irssi" #fix for the xterm fix above with xfce4term and irssi buffer
alias trash="mv --target-directory=$HOME/.Trash"
alias update_dev_env="$HOME/.dotfiles/helper_scripts/dev_env_update.sh"
alias be="noglob bundle exec"
alias pcat='pygmentize -g'
alias gitrm='sh $HOME/.dotfiles/helper_scripts/git_rm.sh'
alias rake='noglob rake'
alias jq='noglob jq'
alias update_gemfury='/usr/bin/ruby $HOME/.dotfiles/helper_scripts/update_gemfury_token.rb'
alias vim='nvim'
alias vi='nvim'
alias grep="grep --exclude-dir=.git --exclude-dir=coverage --exclude-dir=tmp --exclude-dir=vendor --color=auto --exclude-dir=node_modules"
alias ralias="source ~/.zsh_aliases"
alias refresh="source ~/.zshrc"
alias git='hub'
alias kctl='kubectl'
alias skctl='KUBECONFIG=~/.kube/config-server kubectl --insecure-skip-tls-verify'
alias ack='ag'
#alias rails='bundle exec rails'
alias hyper="cmd.exe /c hyper"

# aws ()
# {
#   export AWS_SESSION_TOKEN=$(ruby $HOME/.dotfiles/helper_scripts/set_aws.rb)
# }

alias awsprod="AWS_REGION=us-east-1 AWS_PROFILE=sfprod aws"
alias awsinfra="AWS_PROFILE=sfinfra aws"
alias awsstage="AWS_PROFILE=sfstage aws"

bindkey '^R' history-incremental-pattern-search-backward
bindkey '^S' history-incremental-pattern-search-forward

ftfc ()
{
  sudo killall VDCAssistant;
  sudo killall AppleCameraAssistant
}

ftfk()
{
  sudo killall -7 karabiner_grabber
  sudo killall -7 karabiner_observer
  sudo killall -7 karabiner_console_user_server
  sudo killall -7 Karabiner-Menu
  sudo killall -7 Karabiner-NotificationWindow
  sudo killall -7 karabiner_kextd
  sudo killall -7 karabiner_session_monitor
}

sshinfra() {
  ssh $(AWS_PROFILE=sfinfra aws ec2 describe-instances --region us-east-1 --filters Name=tag:Name,Values=tf-ecs-main Name=instance-state-name,Values=running --query 'Reservations[0].Instances[0].PrivateIpAddress' --output text)
}

sshprod() {
  ssh $(AWS_PROFILE=sfprod aws ec2 describe-instances --region us-east-1 --filters Name=tag:Name,Values=ecs-production-on_demand Name=instance-state-name,Values=running --query 'Reservations[0].Instances[0].PrivateIpAddress' --output text)
}

sshstage() {
  ssh $(AWS_PROFILE=sfstage aws ec2 describe-instances --region us-east-1 --filters Name=tag:Name,Values=tf-ecs-main Name=instance-state-name,Values=running --query 'Reservations[0].Instances[0].PrivateIpAddress' --output text)
}

forake() {
  fixops run -a fixops-service -e i \"fixops-ssm-env fixops-service bundle exec rake $1\"
}

k8srestart() {
  kubectl scale --replicas=0 deployment/$1 && kubectl scale --replicas=1 deployment/$1
}

fork() {
  echo $0
}
